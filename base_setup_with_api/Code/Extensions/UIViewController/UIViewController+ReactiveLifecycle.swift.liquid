//
//  {{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright {{ year }} {{ developer.company }}. All rights reserved.
//

import RxSwift
import RxCocoa

extension Reactive where Base: UIViewController {
    
    var viewDidLoad: ControlEvent<Void> {
        ControlEvent(events: emptyMethodInvoked(#selector(Base.viewDidLoad)))
    }
    
    var viewWillAppear: ControlEvent<Void> {
        ControlEvent(events: emptyMethodInvoked(#selector(Base.viewWillAppear(_:))))
    }
    
    var viewDidAppear: ControlEvent<Void> {
        ControlEvent(events: emptyMethodInvoked(#selector(Base.viewDidAppear(_:))))
    }
    
    var viewWillDisappear: ControlEvent<Void> {
        ControlEvent(events: emptyMethodInvoked(#selector(Base.viewWillDisappear(_:))))
    }
    
    var viewDidDisappear: ControlEvent<Void> {
        ControlEvent(events: emptyMethodInvoked(#selector(Base.viewDidDisappear(_:))))
    }
    
    private func emptyMethodInvoked(_ selector: Selector) -> Observable<Void> {
        methodInvoked(selector).map { _ in }
    }
}